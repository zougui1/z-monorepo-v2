export const calculateMagnetCost = (starLevel: number, scrapyardMul: number): number => {
  // adjust for first 10 stars
  let cost = 250 * (starLevel - 10) + 1000;

  if (starLevel >= 12) cost *= 0.98;
  if (starLevel >= 13) cost *= 0.98;
  if (starLevel >= 14) cost *= 0.98;
  if (starLevel >= 15) cost *= 0.98;
  if (starLevel >= 16) cost *= 0.98;
  if (starLevel >= 17) cost *= 0.98;
  if (starLevel >= 18) cost *= 0.98;
  if (starLevel >= 19) cost *= 0.98;
  if (starLevel >= 20) cost *= 0.98;
  if (starLevel >= 21) cost *= 0.98;
  if (starLevel >= 22) cost *= 0.98;
  if (starLevel >= 23) cost *= 0.98;
  if (starLevel >= 70) cost *= 1.04;
  if (starLevel >= 75) cost *= 1.04;
  if (starLevel >= 80) cost *= 1.06;
  if (starLevel >= 85) cost *= 1.06;
  if (starLevel >= 90) cost *= 1.06;
  if (starLevel >= 94) cost *= 1.06;
  if (starLevel >= 96) cost *= 1.06;
  if (starLevel >= 98) cost *= 1.05;
  if (starLevel >= 100) cost *= 1.05;
  if (starLevel >= 105) cost *= 1.05;
  if (starLevel >= 110) cost *= 1.05;
  if (starLevel >= 115) cost *= 1.03;
  if (starLevel >= 120) cost *= 1.05;
  if (starLevel >= 125) cost *= 1.05;
  if (starLevel >= 130) cost *= 1.05;
  if (starLevel >= 135) cost *= 1.05;
  if (starLevel >= 140) cost *= 1.05;
  if (starLevel >= 145) cost *= 1.05;
  if (starLevel >= 150) cost *= 1.05;
  if (starLevel >= 160) cost *= 1.05;
  if (starLevel >= 180) cost *= 1.05;
  if (starLevel >= 190) cost *= 1.05;
  if (starLevel >= 200) cost *= 1.05;
  if (starLevel >= 210) cost *= 1.05;
  if (starLevel >= 220) cost *= 1.05;
  if (starLevel >= 230) cost *= 1.035;
  if (starLevel >= 250) cost *= 1.1;
  if (starLevel >= 270) cost *= 1.14;
  if (starLevel >= 290) cost *= 1.15;
  if (starLevel >= 300) cost *= 1.04;
  if (starLevel >= 310) cost *= 1.1;
  if (starLevel >= 330) cost *= 1.1;
  if (starLevel >= 350) cost *= 1.05;
  if (starLevel >= 370) cost *= 1.1;
  if (starLevel >= 390) cost *= 1.018;
  if (starLevel >= 410) cost *= 1.1;
  if (starLevel >= 430) cost *= 1.1;
  if (starLevel >= 450) cost *= 1.06;
  if (starLevel >= 470) cost *= 1.1;
  if (starLevel >= 490) cost *= 1.05;
  if (starLevel >= 510) cost *= 1.09;
  if (starLevel >= 530) cost *= 1.09;
  if (starLevel >= 550) cost *= 1.09;
  if (starLevel >= 570) cost *= 1.09;
  if (starLevel >= 590) cost *= 1.07;
  if (starLevel >= 610) cost *= 1.1;
  if (starLevel >= 630) cost *= 1.1;
  if (starLevel >= 650) cost *= 1.1;
  if (starLevel >= 670) cost *= 1.07;
  if (starLevel >= 690) cost *= 1.05;
  if (starLevel >= 710) cost *= 1.1;
  if (starLevel >= 810) cost *= 1.1;
  if (starLevel >= 910) cost *= 1.1;
  if (starLevel >= 1010) cost *= 1.1;
  if (starLevel >= 1020) cost *= 1.1;
  if (starLevel >= 1090) cost *= 1.1;
  if (starLevel >= 1110) cost *= 1.3;
  if (starLevel >= 1120) cost *= 1.1;
  if (starLevel >= 1130) cost *= 1.1;
  if (starLevel >= 1210) cost *= 1.3;
  if (starLevel >= 1260) cost *= 1.18;
  if (starLevel >= 1285) cost *= 1.18;
  if (starLevel >= 1310) cost *= 1.36;
  if (starLevel >= 1360) cost *= 1.36;
  if (starLevel >= 1410) cost *= 1.37;
  if (starLevel >= 1460) cost *= 1.37;
  if (starLevel >= 1510) cost *= 1.3;
  if (starLevel >= 1560) cost *= 1.269;
  if (starLevel >= 1610) cost *= 1.1;
  if (starLevel >= 1660) cost *= 1.1;
  if (starLevel >= 1710) cost *= 1.3;
  if (starLevel >= 1760) cost *= 1.269;
  if (starLevel >= 1810) cost *= 1.1;
  if (starLevel >= 1860) cost *= Math.pow(1.1, Math.floor((starLevel - 1810) / 50));

  return Math.floor(cost * 100 / (scrapyardMul + 100));
}
